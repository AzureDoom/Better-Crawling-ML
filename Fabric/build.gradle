buildscript {
    repositories {
    	maven { url  = 'https://plugins.gradle.org/m2/' }
	gradlePluginPortal()
	mavenCentral()
	jcenter()
    }
}

plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${fabric_name}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    compileOnly project(":Common")
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runServer")
        }
    }
    accessWidenerPath = file("${project(':Common').projectDir.path}/src/main/resources/${mod_id}_common.accesswidener")
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
  repositories {
    maven {
      name = "azurelib"
      url = "https://libs.azuredoom.com:4443/mods"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      groupId = project.group
      artifactId = project.fabric_name
      version = project.version
      from components.java
    }
  }
}