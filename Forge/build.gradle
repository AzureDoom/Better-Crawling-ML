plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.12,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

archivesBaseName = "${neo_name}"

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('runClient')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args "--nogui", 'true', "--singleplayer", 'yes'
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('runData')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

configurations {
    testCompileOnly.extendsFrom(compileOnly)
}

dependencies {
    minecraft "net.neoforged:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":Common")
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
    config "${mod_id}.forge.mixins.json"
}


jar.finalizedBy('reobfJar')

publishing {
  repositories {
    maven {
      name = "azurelib"
      url = "https://libs.azuredoom.com:4443/mods"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      groupId = project.group
      artifactId = project.neo_name
      version = project.version
      from components.java
    }
  }
}
